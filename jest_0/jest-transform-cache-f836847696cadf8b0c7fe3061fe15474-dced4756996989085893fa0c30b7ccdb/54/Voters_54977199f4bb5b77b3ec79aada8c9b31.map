{"version":3,"sources":["Voters.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAWA;;;;;;;AAGA;AACA;AACA;AACA;AAFA;AAIA;AALA;;AAQA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AAHA;;AAMA;AACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;;AACA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAJA;AAjBA;AAZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["<template>\n  <div class=\"border-t list-row\" v-show=\"Object.keys(voters).length\">\n    <div>{{ $t(\"Voters\") }}</div>\n    <div>\n      <span v-tooltip=\"{ content: $t('Only voters with more than 0.1 Bex'), placement: 'left' }\" :class=\"voters.length ? 'mr-2' : ''\">{{ voters.length }}</span>\n      <router-link v-if=\"wallet.address && voters.length\" :to=\"{ name: 'wallet-voters', params: { address: wallet.address, username: username, page: 1 } }\">{{ $t(\"See all\") }}</router-link>\n    </div>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\nimport DelegateService from '@/services/delegate'\n\nexport default {\n  props: {\n    wallet: {\n      type: Object,\n      required: true\n    },\n    username: {}\n  },\n\n  data: () => ({ voters: {} }),\n\n  watch: {\n    wallet(wallet) {\n      if (wallet.publicKey) this.getVoters()\n    }\n  },\n\n  methods: {\n    async getVoters() {\n      const response = await DelegateService.voters(this.wallet.publicKey)\n      this.voters = response\n    }\n  }\n}\n</script>\n"]}