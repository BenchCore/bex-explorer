{"version":3,"sources":["BexMeter.spec.js"],"names":["describe","it","wrapper","BexMeter","propsData","percentage","expect","findAll","toHaveLength"],"mappings":";;AAAA;;AACA;;;;;;AAEAA,SAAS,UAAT,EAAqB,YAAM;AACzBA,WAAS,uBAAT,EAAkC,YAAM;AACtCC,OAAG,sCAAH,EAA2C,YAAM;AAC/C,UAAMC,UAAU,sBAAMC,kBAAN,EAAgB,EAAEC,WAAW,EAAEC,YAAY,CAAd,EAAb,EAAhB,CAAhB;AACAC,aAAOJ,QAAQK,OAAR,CAAgB,QAAhB,CAAP,EAAkCC,YAAlC,CAA+C,CAA/C;AACD,KAHD;AAID,GALD;;AAOAR,WAAS,mCAAT,EAA8C,YAAM;AAClDC,OAAG,uCAAH,EAA4C,YAAM;AAChD,UAAMC,UAAU,sBAAMC,kBAAN,EAAgB,EAAEC,WAAW,EAAEC,YAAY,EAAd,EAAb,EAAhB,CAAhB;AACAC,aAAOJ,QAAQK,OAAR,CAAgB,QAAhB,CAAP,EAAkCC,YAAlC,CAA+C,CAA/C;AACD,KAHD;AAID,GALD;AAMD,CAdD","file":"BexMeter.spec.js","sourcesContent":["import { mount } from '@vue/test-utils'\nimport BexMeter from '@/components/BexMeter'\n\ndescribe('BexMeter', () => {\n  describe('when percentage is 0%', () => {\n    it('the arc with colour should be hidden', () => {\n      const wrapper = mount(BexMeter, { propsData: { percentage: 0 } })\n      expect(wrapper.findAll('circle')).toHaveLength(1)\n    })\n  })\n\n  describe('when percentage is bigger than 0%', () => {\n    it('the arc with colour should be visible', () => {\n      const wrapper = mount(BexMeter, { propsData: { percentage: 50 } })\n      expect(wrapper.findAll('circle')).toHaveLength(2)\n    })\n  })\n})\n"]}