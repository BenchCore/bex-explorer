{"version":3,"sources":["Transaction.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AA0EA;;;;AACA;;;;AA3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAMA;AAAA;AACA;AADA;AAAA;;AAIA;;AAIA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEA;;AACA;AAAA;AAAA;AAHA;AAAA;;AAAA;AAAA;AAAA;AAIA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AADA;AAAA;AAAA;;AAAA;AAIA;;AACA;AACA;AANA;AAAA;;AAAA;AAAA;AAAA;AAOA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;AAEA;AACA;AACA;AACA;AAHA;AA1BA","sourcesContent":["<template>\n  <div class=\"max-w-2xl mx-auto md:pt-5\" v-if=\"transaction\">\n    <content-header>{{ $t(\"Transaction\") }}</content-header>\n\n    <section class=\"mb-5\">\n      <div class=\"px-5 sm:px-10 py-8 bg-theme-feature-background flex xl:rounded-lg items-center\">\n        <div class=\"mr-6 flex-none\">\n          <img class=\"block\" src=\"@/assets/images/icons/transaction.svg\" />\n        </div>\n        <div  class=\"flex-auto min-w-0\">\n          <div class=\"text-grey mb-2\">{{ $t(\"Transaction ID\") }}</div>\n          <div class=\"flex\">\n            <div class=\"text-xl text-white semibold truncate\">\n              <span class=\"mr-2\">{{ transaction.id }}</span>\n            </div>\n            <clipboard\n              v-if=\"transaction.id\"\n              :value=\"transaction.id\"></clipboard>\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <section class=\"page-section py-8 mb-5\">\n      <div class=\"px-5 sm:px-10 py-4\">\n        <div class=\"list-row-border-b\">\n          <div>{{ $t(\"Sender\") }}</div>\n          <div class=\"truncate\">\n            <link-wallet :address=\"transaction.senderId\">{{ transaction.senderId }}</link-wallet>\n          </div>\n        </div>\n\n        <div class=\"list-row-border-b\">\n          <div>{{ $t(\"Recipient\") }}</div>\n          <div class=\"truncate\">\n            <link-wallet :address=\"transaction.recipientId\" :type=\"transaction.type\">{{ transaction.recipientId }}</link-wallet>\n          </div>\n        </div>\n\n        <div class=\"list-row-border-b\">\n          <div>{{ $t(\"Confirmations\") }}</div>\n          <div>{{ transaction.confirmations }}</div>\n        </div>\n\n        <div class=\"list-row-border-b\">\n          <div>{{ $t(\"Amount\") }}</div>\n          <div>{{ readableCrypto(transaction.amount) }}</div>\n        </div>\n\n        <div class=\"list-row-border-b\">\n          <div>{{ $t(\"Fee\") }}</div>\n          <div>{{ readableCrypto(transaction.fee) }}</div>\n        </div>\n\n        <div class=\"list-row-border-b\">\n          <div>{{ $t(\"Timestamp\") }}</div>\n          <div>{{ readableTimestamp(transaction.timestamp) }}</div>\n        </div>\n\n        <div class=\"list-row-border-b-no-wrap\" v-if=\"transaction.vendorField\">\n          <div class=\"mr-4\">{{ $t(\"Sidechain\") }}</div>\n          <div class=\"text-right\">{{ transaction.vendorField }}</div>\n        </div>\n\n        <div class=\"list-row\" v-if=\"transaction.blockid\">\n          <div>{{ $t(\"Block\") }}</div>\n          <div><link-block :id=\"transaction.blockid\">{{ transaction.blockid }}</link-block></div>\n        </div>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\nimport TransactionService from '@/services/transaction'\nimport { mapGetters } from 'vuex'\n\nexport default {\n  data: () => ({\n    transaction: {},\n  }),\n\n  computed: {\n    ...mapGetters('delegates', ['delegates']),\n  },\n\n  async beforeRouteEnter(to, from, next) {\n    try {\n      const response = await TransactionService.find(to.params.id)\n      next(vm => vm.setTransaction(response))\n    } catch(e) { next({ name: '404' }) }\n  },\n\n  async beforeRouteUpdate(to, from, next) {\n    this.transaction = {}\n\n    try {\n      const response = await TransactionService.find(to.params.id)\n      this.setTransaction(response)\n      next()\n    } catch(e) { next({ name: '404' }) }\n  },\n\n  methods: {\n    setTransaction(transaction) {\n      this.transaction = transaction\n    },\n  },\n}\n</script>\n"]}