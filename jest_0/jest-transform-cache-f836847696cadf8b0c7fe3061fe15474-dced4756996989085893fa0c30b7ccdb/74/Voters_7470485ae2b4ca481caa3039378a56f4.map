{"version":3,"sources":["Voters.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAgBA;;;;AACA;;;;AACA;;;;;;;AAGA;AAAA;AACA;AACA;AAFA;AAAA;;AAKA;AAAA;;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;;AAsBA;AACA;AACA;;;AAEA;AACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEA;AAFA;AAAA;;AAAA;AAGA;;AACA;AAJA;AAAA;;AAAA;AAAA;AAAA;AAKA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAdA;AApCA;AAnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["<template>\n  <div class=\"max-w-2xl mx-auto pt-5\">\n    <content-header>{{ $t(\"Voters\") }} <span v-show=\"username\">- {{ username }}</span></content-header>\n    <section class=\"page-section py-10\">\n      <div class=\"hidden sm:block\">\n        <table-wallets :wallets=\"filteredWallets\" :total=\"votes\"></table-wallets>\n      </div>\n      <div class=\"sm:hidden\">\n        <table-wallets-mobile :wallets=\"filteredWallets\" :total=\"votes\"></table-wallets-mobile>\n      </div>\n      <paginator v-if=\"wallets\" :start=\"+this.page\" :count=\"count\"></paginator>\n    </section>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\nimport WalletService from '@/services/wallet'\nimport DelegateService from '@/services/delegate'\nimport sumBy from 'lodash/sumBy'\n\nexport default {\n  data: () => ({\n    wallets: null,\n    perPage: 25,\n  }),\n\n  created() {\n    this.$on('paginatorChanged', page => this.changePage(page))\n  },\n\n  computed: {\n    filteredWallets() {\n      if (!this.wallets) return null\n\n      let page = this.page - 1\n\n      return this.wallets.slice(page * this.perPage, (page + 1) * this.perPage)\n    },\n    page() {\n      return this.$route.params.page\n    },\n    votes() {\n      return sumBy(this.wallets, 'balance')\n    },\n    username() {\n      return this.$route.params.username\n    },\n    count() {\n      return this.wallets.length\n    }\n  },\n\n  mounted() {\n    this.getVoters()\n  },\n\n  methods: {\n    async getVoters() {\n      try {\n        const wallet = await WalletService.find(this.$route.params.address)\n        const voters = await DelegateService.voters(wallet.publicKey)\n        this.wallets = voters\n      } catch(e) { next({ name: '404' }) }\n    },\n\n    changePage(page) {\n      this.$router.push({\n        name: 'wallet-voters',\n        params: { address: this.$route.params.address, username: this.$route.params.username, page }\n      })\n    }\n  }\n}\n</script>\n"]}