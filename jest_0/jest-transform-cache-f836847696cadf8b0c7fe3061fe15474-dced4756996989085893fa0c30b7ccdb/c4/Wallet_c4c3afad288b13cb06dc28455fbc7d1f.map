{"version":3,"sources":["Wallet.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAmBA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAUA;AACA;AACA;AACA;AACA;AACA;AALA;;AAQA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;;AAOA;AACA;AACA;AACA;AAHA;;AAMA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEA;;AACA;AAAA;AAAA;AAHA;AAAA;;AAAA;AAAA;AAAA;AAIA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AADA;AAAA;AAAA;;AAAA;AAIA;;AACA;AACA;AANA;AAAA;;AAAA;AAAA;AAAA;AAOA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;AAEA;AACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AADA;AAAA;;AAAA;AAGA;;AACA;;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AANA;AAvCA","sourcesContent":["<template>\n  <div class=\"max-w-2xl mx-auto md:pt-5\">\n    <content-header>{{ $t(\"Wallet Summary\") }}</content-header>\n\n    <wallet-details :wallet=\"wallet\"></wallet-details>\n\n    <section class=\"page-section mb-5\" :class=\"{ 'py-8': isDelegate }\" v-show=\"isDelegate || isVoting\">\n      <div class=\"px-5 sm:px-10\" :class=\"{ 'py-4': !isDelegate }\">\n        <delegate :wallet=\"wallet\" v-show=\"isDelegate\" v-on:username=\"username = $event\"></delegate>\n        <vote :wallet=\"wallet\" v-show=\"isVoting\"></vote>\n        <voters :wallet=\"wallet\" :username=\"username\" v-show=\"isDelegate\"></voters>\n      </div>\n    </section>\n\n    <transactions :wallet=\"wallet\" v-if=\"wallet\"></transactions>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\nimport WalletDetails from '@/components/wallet/Details'\nimport Delegate from '@/components/wallet/Delegate'\nimport Vote from '@/components/wallet/Vote'\nimport Voters from '@/components/wallet/Voters'\nimport Transactions from '@/components/wallet/Transactions'\nimport WalletService from '@/services/wallet'\n\nexport default {\n  components: {\n    WalletDetails,\n    Delegate,\n    Vote,\n    Voters,\n    Transactions,\n  },\n\n  data: () => ({\n    wallet: {},\n    activeTab: 'all',\n    isVoting: false,\n    username: ''\n  }),\n\n  computed: {\n    isDelegate() {\n      return this.isDelegateByAddress(this.$route.params.address)\n    },\n  },\n\n  async beforeRouteEnter(to, from, next) {\n    try {\n      const response = await WalletService.find(to.params.address)\n      next(vm => vm.setWallet(response))\n    } catch(e) { next({ name: '404' }) }\n  },\n\n  async beforeRouteUpdate(to, from, next) {\n    this.wallet = {}\n\n    try {\n      const response = await WalletService.find(to.params.address)\n      this.setWallet(response)\n      next()\n    } catch(e) { next({ name: '404' }) }\n  },\n\n  methods: {\n    async setWallet(wallet) {\n      this.wallet = wallet\n\n      const vote = await WalletService.vote(wallet.address)\n      this.isVoting = vote ? true : false\n    },\n  },\n}\n</script>\n"]}