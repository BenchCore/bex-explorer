{"version":3,"sources":["index.js"],"names":["methods","isDelegateByAddress","address","store","getters","filter","length","isDelegateByPublicKey","publicKey","readableTimestamp","value","timeZoneOffset","utc","set","year","month","date","hour","minute","second","add","Math","abs","Date","getTimezoneOffset","format","readableTimestampAgo","time","compareTime","getTime","t","momentTime","from","fromNow","truncate","truncateWhere","slice","odd","truncationLength","floor","rawCurrency","currencyName","some","indexOf","c","toLocaleString","undefined","maximumFractionDigits","minimumFractionDigits","readableNumber","digits","toFixed","readableFiat","Intl","NumberFormat","style","currency","readableCurrency","normalise","pow","readableCrypto","appendCurrency","decimals","networkToken","capitalize","charAt","toUpperCase","percentageString","Vue","mixin"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,4DAAU;AAAA,4BACdC,mBADc,+BACMC,OADN,EACe;AAAA;;AAC3B,WACEC,sEAAMC,OAAN,CAAc,qBAAd,EAAqCC,MAArC,CACE,aAAK;AAAA;AAAA;AAAA,iBAAEH,OAAF,KAAcA,OAAd;AAAqB,OAD5B,EAEEI,MAFF,GAEW;AAHb;AAKD,GAPa;AAAA,4BASdC,qBATc,iCASQC,SATR,EASmB;AAAA;;AAC/B,WACEL,sEAAMC,OAAN,CAAc,qBAAd,EAAqCC,MAArC,CACE,aAAK;AAAA;AAAA;AAAA,iBAAEG,SAAF,KAAgBA,SAAhB;AAAyB,OADhC,EAEEF,MAFF,GAEW;AAHb;AAKD,GAfa;AAAA,4BAiBdG,iBAjBc,6BAiBIC,KAjBJ,EAiBWC,cAjBX,EAiB2B;AAAA;;AACvC,WAAO,wGACJC,GADI,GAEJC,GAFI,CAEA;AACHC,cAAM,IADH;AAEHC,eAAO,CAFJ;AAGHC,cAAM,EAHH;AAIHC,cAAM,CAJH;AAKHC,gBAAQ,CALL;AAMHC,gBAAQ;AANL,OAFA,EAUJC,GAVI,CAUAC,KAAKC,GAAL,CAAS,OAAOX,cAAP,KAA0B,WAA1B,wDAAwCA,cAAxC,yDAAyD,IAAIY,IAAJ,GAAWC,iBAAX,EAAzD,CAAT,CAVA,EAUmG,SAVnG,EAWJJ,GAXI,CAWAV,KAXA,EAWO,SAXP,EAYJe,MAZI,CAYG,qBAZH;AAAP;AAaD,GA/Ba;AAAA,4BAiCdC,oBAjCc,gCAiCOC,IAjCP,EAiCaC,WAjCb,EAiC0B;AAAA;;AACtC,QAAMC,UAAU,SAAVA,OAAU,CAAUC,CAAV,EAAa;AAAA;AAAA;;AAC3B,aAAO,wGACJlB,GADI,GAEJC,GAFI,CAEA;AACHC,gBAAM,IADH;AAEHC,iBAAO,CAFJ;AAGHC,gBAAM,EAHH;AAIHC,gBAAM,CAJH;AAKHC,kBAAQ,CALL;AAMHC,kBAAQ;AANL,SAFA,EAUJC,GAVI,CAUAU,CAVA,EAUG,SAVH;AAAP;AAWD,KAZD;;AAcA,QAAMC,+DAAaF,QAAQF,IAAR,CAAb,CAAN;AAfsC;AAgBtC,WAAO,OAAOC,WAAP,KAAuB,WAAvB,wDAAqCG,WAAWC,IAAX,CAAgBH,QAAQD,WAAR,CAAhB,CAArC,yDAA6EG,WAAWE,OAAX,EAA7E,CAAP;AACD,GAlDa;AAAA,4BAoDdC,QApDc,oBAoDLxB,KApDK,EAoDyC;AAAA,kCAAvCJ,MAAuC,kGAA9B,EAA8B;AAAA,kCAA1B6B,aAA0B,kGAAV,QAAU;AAAA;;AACrD,YAAQA,aAAR;AACE,WAAK,MAAL;AAAA;AAAA;;AACE,eAAQzB,MAAMJ,MAAN,GAAeA,MAAhB,gEACGI,MAAM0B,KAAN,CAAY1B,MAAMJ,MAAN,GAAeA,MAAf,GAAwB,CAApC,CADH,yDAEHI,KAFG,CAAP;;AAIF,WAAK,QAAL;AAAA;;AACE,YAAM2B,yDAAM/B,SAAS,CAAf,CAAN;AACA,YAAMgC,sEAAmBjB,KAAKkB,KAAL,CAAW,CAACjC,SAAS,CAAV,IAAe,CAA1B,CAAnB,CAAN;AAFF;AAGE,eAAQI,MAAMJ,MAAN,GAAeA,MAAhB,wDACAI,MAAM0B,KAAN,CAAY,CAAZ,EAAeE,mBAAmBD,GAAlC,CADA,WAC4C3B,MAAM0B,KAAN,CAAY1B,MAAMJ,MAAN,GAAegC,gBAAf,GAAkC,CAA9C,CAD5C,yDAEH5B,KAFG,CAAP;;AAIF,WAAK,OAAL;AAAA;AAAA;;AACE,eAAQA,MAAMJ,MAAN,GAAeA,MAAhB,wDACAI,MAAM0B,KAAN,CAAY,CAAZ,EAAe9B,SAAS,CAAxB,CADA,iEAEHI,KAFG,CAAP;;AAIF;AAAA;AAAA;;AACE,eAAOA,KAAP;AAnBJ;AAqBD,GA1Ea;AAAA,4BA4Ed8B,WA5Ec,uBA4EF9B,KA5EE,EA4EK+B,YA5EL,EA4EmB;AAAA;;AAC/B,WAAO,CAACtC,qEAAMC,OAAN,CAAc,eAAd,CAAD,EAAiC,KAAjC,EAAwC,KAAxC,EAA+C,KAA/C,EAAsDsC,IAAtD,CACL,aAAK;AAAA;AAAA;AAAA,0BAAaC,OAAb,CAAqBC,CAArB,IAA0B,CAAC,CAA3B;AAA4B,KAD5B,yDAGHlC,MAAMmC,cAAN,CAAqBC,SAArB,EAAgC;AAChCC,6BAAuB;AADS,KAAhC,CAHG,yDAMHrC,MAAMmC,cAAN,CAAqBC,SAArB,EAAgC;AAChCE,6BAAuB,CADS;AAEhCD,6BAAuB;AAFS,KAAhC,CANG,CAAP;AAUD,GAvFa;AAAA,4BAyFdE,cAzFc,0BAyFCvC,KAzFD,EAyFoB;AAAA,kCAAZwC,MAAY,kGAAH,CAAG;AAAA;;AAChC,WAAOxC,MAAMyC,OAAN,CAAcD,MAAd,CAAP;AACD,GA3Fa;AAAA,4BA6FdE,YA7Fc,wBA6FD1C,KA7FC,EA6FM;AAAA;;AAClB,WAAO,IAAI2C,KAAKC,YAAT,CAAsB,OAAtB,EAA+B;AACpCC,aAAO,UAD6B;AAEpCC,gBAAUrD,qEAAMC,OAAN,CAAc,eAAd,CAF0B;AAGpC4C,6BAAuB;AAHa,KAA/B,EAIJvB,MAJI,CAIGf,KAJH,CAAP;AAKD,GAnGa;AAAA,4BAqGd+C,gBArGc,4BAqGG/C,KArGH,EAqG6C;AAAA,kCAAnC8C,QAAmC,mGAAxB,IAAwB;AAAA,kCAAlBE,SAAkB,mGAAN,IAAM;;AACzD,QAAMjB,kEAAe,yHAAYtC,qEAAMC,OAAN,CAAc,eAAd,CAAZ,CAAf,CAAN;;AADyD;AAGzDM,aAASP,qEAAMC,OAAN,CAAc,eAAd,CAAT;;AAHyD;AAKzD,QAAIsD,SAAJ,EAAe;AAAA;AAAA;;AACbhD,eAASW,KAAKsC,GAAL,CAAS,EAAT,EAAa,CAAb,CAAT;AACD,KAFD;AAAA;AAAA;;AALyD;AASzD,WAAO,CAACxD,qEAAMC,OAAN,CAAc,eAAd,CAAD,EAAiC,KAAjC,EAAwC,KAAxC,EAA+C,KAA/C,EAAsDsC,IAAtD,CACL,aAAK;AAAA;AAAA;AAAA,0BAAaC,OAAb,CAAqBC,CAArB,IAA0B,CAAC,CAA3B;AAA4B,KAD5B,0DAGHlC,MAAMmC,cAAN,CAAqBC,SAArB,EAAgC;AAChCC,6BAAuB;AADS,KAAhC,CAHG,0DAMHrC,MAAMmC,cAAN,CAAqBC,SAArB,EAAgC;AAChCC,6BAAuB;AADS,KAAhC,CANG,CAAP;AASD,GAvHa;AAAA,4BAyHda,cAzHc,0BAyHClD,KAzHD,EAyH6C;AAAA,kCAArCmD,cAAqC,mGAApB,IAAoB;AAAA,kCAAdC,QAAc,mGAAH,CAAG;AAAA;;AACzD,QAAI,OAAOpD,KAAP,KAAiB,WAArB,EAAkC;AAAA;AAAA;;AAChCA,cAAQ,CAACA,SAASW,KAAKsC,GAAL,CAAS,EAAT,EAAa,CAAb,CAAV,EAA2Bd,cAA3B,CAA0CC,SAA1C,EAAqD;AAC3DC,+BAAuBe;AADoC,OAArD,CAAR;;AADgC;AAKhC,aAAOD,uEAAoBnD,KAApB,SAA6BP,qEAAMC,OAAN,CAAc,gBAAd,CAA7B,0DAAiEM,KAAjE,CAAP;AACD,KAND;AAAA;AAAA;AAOD,GAjIa;AAAA,4BAmIdqD,YAnIc,0BAmIC;AAAA;;AACb,WAAO5D,sEAAMC,OAAN,CAAc,eAAd;AAAP;AACD,GArIa;AAAA,4BAuId4D,UAvIc,sBAuIHtD,KAvIG,EAuII;AAAA;;AAChB,WAAOA,MAAMuD,MAAN,CAAa,CAAb,EAAgBC,WAAhB,KAAgCxD,MAAM0B,KAAN,CAAY,CAAZ,CAAvC;AACD,GAzIa;AAAA,4BA2Id+B,gBA3Ic,4BA2IGzD,KA3IH,EA2IwB;AAAA,kCAAdoD,QAAc,mGAAH,CAAG;AAAA;;AACpC,QAAI,OAAOpD,KAAP,KAAiB,WAArB,EAAkC;AAAA;AAAA;;AAChCA,cAAQA,MAAMmC,cAAN,CAAqBC,SAArB,EAAgC;AACtCE,+BAAuBc,QADe;AAEtCf,+BAAuBe;AAFe,OAAhC,CAAR;;AADgC;AAMhC,aAAOpD,QAAQ,GAAf;AACD,KAPD;AAAA;AAAA;;AADoC;AAUpC,WAAO,GAAP;AACD;AAtJa,CAAV,CAAN;;;AAyJA0D,mEAAIC,KAAJ,CAAU;AACRrE;AADQ,CAAV;;4CAIeA,O","file":"index.js","sourcesContent":["import Vue from 'vue'\nimport moment from 'moment'\nimport store from '@/store'\n\nconst methods = {\n  isDelegateByAddress(address) {\n    return (\n      store.getters['delegates/delegates'].filter(\n        d => d.address === address\n      ).length > 0\n    )\n  },\n\n  isDelegateByPublicKey(publicKey) {\n    return (\n      store.getters['delegates/delegates'].filter(\n        d => d.publicKey === publicKey\n      ).length > 0\n    )\n  },\n\n  readableTimestamp(value, timeZoneOffset) {\n    return moment()\n      .utc()\n      .set({\n        year: 2018,\n        month: 6,\n        date: 18,\n        hour: 8,\n        minute: 0,\n        second: 0,\n      })\n      .add(Math.abs(typeof timeZoneOffset !== 'undefined' ? timeZoneOffset : new Date().getTimezoneOffset()), 'minutes')\n      .add(value, 'seconds')\n      .format('DD.MM.YYYY HH:mm:ss')\n  },\n\n  readableTimestampAgo(time, compareTime) {\n    const getTime = function (t) {\n      return moment()\n        .utc()\n        .set({\n          year: 2018,\n          month: 6,\n          date: 18,\n          hour: 8,\n          minute: 0,\n          second: 0,\n        })\n        .add(t, 'seconds')\n    }\n\n    const momentTime = getTime(time)\n    return typeof compareTime !== 'undefined' ? momentTime.from(getTime(compareTime)) : momentTime.fromNow()\n  },\n\n  truncate(value, length = 13, truncateWhere = 'middle') {\n    switch (truncateWhere) {\n      case 'left':\n        return (value.length > length)\n          ? `...${value.slice(value.length - length + 3)}`\n          : value\n\n      case 'middle':\n        const odd = length % 2\n        const truncationLength = Math.floor((length - 1) / 2)\n        return (value.length > length)\n          ? `${value.slice(0, truncationLength - odd)}...${value.slice(value.length - truncationLength + 1)}`\n          : value\n\n      case 'right':\n        return (value.length > length)\n          ? `${value.slice(0, length - 3)}...`\n          : value\n\n      default:\n        return value\n    }\n  },\n\n  rawCurrency(value, currencyName) {\n    return [store.getters['network/token'], 'BTC', 'ETH', 'LTC'].some(\n      c => currencyName.indexOf(c) > -1\n    )\n      ? value.toLocaleString(undefined, {\n        maximumFractionDigits: 8,\n      })\n      : value.toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      })\n  },\n\n  readableNumber(value, digits = 2) {\n    return value.toFixed(digits)\n  },\n\n  readableFiat(value) {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: store.getters['currency/name'],\n      minimumFractionDigits: 2,\n    }).format(value)\n  },\n\n  readableCurrency(value, currency = null, normalise = true) {\n    const currencyName = currency || store.getters['currency/name']\n\n    value *= store.getters['currency/rate']\n\n    if (normalise) {\n      value /= Math.pow(10, 8)\n    }\n\n    return [store.getters['network/token'], 'BTC', 'ETH', 'LTC'].some(\n      c => currencyName.indexOf(c) > -1\n    )\n      ? value.toLocaleString(undefined, {\n        maximumFractionDigits: 8,\n      })\n      : value.toLocaleString(undefined, {\n        maximumFractionDigits: 2,\n      })\n  },\n\n  readableCrypto(value, appendCurrency = true, decimals = 8) {\n    if (typeof value !== 'undefined') {\n      value = (value /= Math.pow(10, 8)).toLocaleString(undefined, {\n        maximumFractionDigits: decimals,\n      })\n\n      return appendCurrency ? `${value} ${store.getters['network/symbol']}` : value\n    }\n  },\n\n  networkToken() {\n    return store.getters['network/token']\n  },\n\n  capitalize(value) {\n    return value.charAt(0).toUpperCase() + value.slice(1)\n  },\n\n  percentageString(value, decimals = 2) {\n    if (typeof value !== 'undefined') {\n      value = value.toLocaleString(undefined, {\n        minimumFractionDigits: decimals,\n        maximumFractionDigits: decimals,\n      })\n\n      return value + '%'\n    }\n\n    return '-'\n  },\n}\n\nVue.mixin({\n  methods,\n})\n\nexport default methods\n"]}