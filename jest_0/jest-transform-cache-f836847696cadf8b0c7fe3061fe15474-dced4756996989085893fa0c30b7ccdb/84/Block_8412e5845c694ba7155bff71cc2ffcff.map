{"version":3,"sources":["Block.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAaA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAQA;;AAEA;AAAA;AACA;AACA;AAFA;AAAA;;AAKA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEA;;AACA;AAAA;AAAA;AAHA;AAAA;;AAAA;AAAA;AAAA;AAIA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AADA;AAAA;AAAA;;AAAA;AAIA;;AACA;AACA;AANA;AAAA;;AAAA;AAAA;AAAA;AAOA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAEA;AAAA;;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEA;;AACA;AAHA;AAAA;;AAAA;AAAA;AAAA;AAIA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEA;;AACA;AAHA;AAAA;;AAAA;AAAA;AAAA;AAIA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AA3BA;AA7BA","sourcesContent":["<template>\n  <div class=\"max-w-2xl mx-auto md:pt-5\" v-if=\"block\">\n    <content-header>{{ $t(\"Block\") }}</content-header>\n\n    <identity :block=\"block\" :prev-handler=\"prevBlock\" :next-handler=\"nextBlock\"></identity>\n\n    <block-details :block=\"block\"></block-details>\n\n    <transactions :block=\"block\"></transactions>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\nimport Identity from '@/components/block/Identity'\nimport BlockDetails from '@/components/block/Details'\nimport Transactions from '@/components/block/Transactions'\nimport BlockService from '@/services/block'\n\nexport default {\n  components: {Identity, BlockDetails, Transactions},\n\n  data: () => ({\n    block: {},\n    timer: null\n  }),\n\n  async beforeRouteEnter (to, from, next) {\n    try {\n      const response = await BlockService.find(to.params.id)\n      next(vm => vm.setBlock(response))\n    } catch(e) { next({ name: '404' }) }\n  },\n\n  async beforeRouteUpdate (to, from, next) {\n    this.block = {}\n\n    try {\n      const response = await BlockService.find(to.params.id)\n      this.setBlock(response)\n      next()\n    } catch(e) { next({ name: '404' }) }\n  },\n\n  mounted() {\n    this.initialiseTimer()\n  },\n\n  methods: {\n    initialiseTimer() {\n      this.timer = setInterval(this.updateBlock, 8 * 1000)\n    },\n\n    updateBlock() {\n      BlockService\n        .find(this.block.id)\n        .then(response => this.setBlock(response))\n    },\n\n    setBlock (block) {\n      this.block = block\n    },\n\n    async prevBlock() {\n      try {\n        const response = await BlockService.findPrevious(this.block.height)\n        this.$router.push({ name: 'block', params: { id: response.id } })\n      } catch(e) { console.log(e.message || e.data.error) }\n    },\n\n    async nextBlock() {\n      try {\n        const response = await BlockService.findNext(this.block.height)\n        this.$router.push({ name: 'block', params: { id: response.id } })\n      } catch(e) { console.log(e.message || e.data.error) }\n    }\n  }\n}\n</script>\n"]}