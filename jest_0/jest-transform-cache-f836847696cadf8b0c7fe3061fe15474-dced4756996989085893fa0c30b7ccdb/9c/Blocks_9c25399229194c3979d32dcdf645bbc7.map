{"version":3,"sources":["Blocks.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAgBA;;;;AACA;;;;;;AAjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAMA;AAAA;AACA;AACA;AAFA;AAAA;;AAKA;AAAA;;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEA;AAFA;AAAA;;AAAA;AAGA;;AACA;AAAA;AAAA;AAJA;AAAA;;AAAA;AAAA;AAAA;AAKA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AADA;AAAA;AAAA;;AAAA;AAIA;AAJA;AAAA;;AAAA;AAKA;;AACA;AACA;AAPA;AAAA;;AAAA;AAAA;AAAA;AAQA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;AASA;AACA;AACA;;AAEA;AACA;AAEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;AADA;AAAA;;AAAA;AAEA;;;AAEA;;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAnBA;AAvCA","sourcesContent":["<template>\n  <div class=\"max-w-2xl mx-auto pt-5\">\n    <content-header>{{ $t(\"Blocks\") }}</content-header>\n    <section class=\"page-section py-10\">\n      <div class=\"hidden sm:block\">\n        <table-blocks :blocks=\"blocks\"></table-blocks>\n      </div>\n      <div class=\"sm:hidden\">\n        <table-blocks-mobile :blocks=\"blocks\"></table-blocks-mobile>\n      </div>\n      <paginator v-if=\"blocks\" :start=\"+this.page\" :count=\"totalBlocks\"></paginator>\n    </section>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\nimport WalletService from '@/services/wallet'\nimport BlockService from '@/services/block'\n\nexport default {\n  data: () => ({\n    totalBlocks: 0,\n    blocks: null\n  }),\n\n  created() {\n    this.$on('paginatorChanged', page => this.changePage(page))\n    this.getTotalBlocks()\n  },\n\n  async beforeRouteEnter (to, from, next) {\n    try {\n      const wallet = await WalletService.find(to.params.address)\n      const blocks = await BlockService.getByPublicKey(wallet.publicKey, to.params.page)\n      next(vm => vm.setBlocks(blocks))\n    } catch(e) { next({ name: '404' }) }\n  },\n\n  async beforeRouteUpdate (to, from, next) {\n    this.blocks = null\n\n    try {\n      const wallet = await WalletService.find(to.params.address)\n      const blocks = await BlockService.getByPublicKey(wallet.publicKey, to.params.page)\n      this.setBlocks(blocks)\n      next()\n    } catch(e) { next({ name: '404' }) }\n  },\n\n  computed: {\n    address() {\n      return this.$route.params.address\n    },\n    page() {\n      return this.$route.params.page\n    },\n  },\n\n  methods: {\n    setBlocks (blocks) {\n      if (!blocks) return\n\n      this.blocks = blocks\n    },\n\n    async getTotalBlocks() {\n      const wallet = await WalletService.find(this.address)\n      const response = await BlockService.forgedByPublicKeyCount(wallet.publicKey)\n\n      this.totalBlocks = Number(response)\n    },\n\n    changePage(page) {\n      this.$router.push({\n        name: 'wallet-blocks',\n        params: { address: this.address, page }\n      })\n    }\n  }\n}\n</script>\n"]}