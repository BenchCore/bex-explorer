{"version":3,"sources":["Clipboard.vue"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AAFA;AADA;;AAOA;AAAA;AACA;AACA;AAFA;AAAA;;AAKA;AACA;AAAA;;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;;AAEA;AAAA;AAAA;;AAEA;AACA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AA1BA;AAbA","sourcesContent":["<template>\n  <button class=\"flex-none\" @click=\"copy\" v-tooltip=\"{ show: isMobileCopying, content: copying ? $t('Copied!') : $t('Copy to Clipboard'), trigger:'hover'}\">\n    <img :class=\"{\n      'block': !copying, 'block animated wobble': copying\n    }\" src=\"@/assets/images/icons/copy.svg\" ref=\"copyImage\" />\n  </button>\n</template>\n\n<script type=\"text/ecmascript-6\">\nexport default {\n  props: {\n    value: {\n      type: String,\n      required: true,\n    },\n  },\n\n  data: () => ({\n    copying: false,\n    isMobileCopying: false\n  }),\n\n  methods: {\n    copy() {\n      let textArea = document.createElement('textarea')\n      textArea.value = this.value\n      textArea.style.cssText =\n        'position:absolute;top:0;left:0;z-index:-9999;opacity:0;'\n\n      document.body.appendChild(textArea)\n      textArea.select()\n\n      try {\n        this.copying = true\n\n        setTimeout(() => (this.copying = false), 500)\n\n        if (window.innerWidth < 768) {\n          this.isMobileCopying = true\n          setTimeout(() => (this.isMobileCopying = false), 400) // If set to 500, it will briefly show 'Copy to clipboard' before closing tooltip\n        }\n\n        document.execCommand('copy')\n      } catch (err) {\n        console.error('Clipboard not supported!')\n      }\n\n      document.body.removeChild(textArea)\n    },\n  },\n}\n</script>\n"]}