{"version":3,"sources":["Delegate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAyCA;;;;;;;AAGA;AACA;AACA;AACA;AAFA;AADA;;AAOA;AAAA;AAAA;;AAEA;AACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAHA;;AAMA;AACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEA;;AACA;;AAEA;AALA;AAAA;;AAAA;AAAA;AAAA;AAMA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AARA;AAhBA;AA1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["<template>\n  <div v-show=\"Object.keys(delegate).length\">\n    <div class=\"list-row-border-b\">\n      <div>{{ $t(\"Delegate\") }}</div>\n      <div>{{ delegate.username }}</div>\n    </div>\n\n    <div class=\"list-row-border-b\">\n      <div>{{ $t(\"Uptime\") }}</div>\n      <div>{{ percentageString(delegate.productivity) }}</div>\n    </div>\n\n    <div class=\"list-row-border-b\">\n      <div>{{ $t(\"Rank/Status\") }}</div>\n      <div>{{ delegate.rate }}</div>\n    </div>\n\n    <div class=\"list-row-border-b\">\n      <div>{{ $t(\"Approval\") }}</div>\n      <div v-tooltip=\"{ content: readableCrypto(this.delegate.vote, true, 2), placement: 'left' }\">\n        {{ percentageString(delegate.approval) }}\n      </div>\n    </div>\n\n    <div class=\"list-row-border-b\">\n      <div>{{ $t(\"Forged\") }}</div>\n      <div>{{ readableCrypto(delegate.forged) }}</div>\n    </div>\n\n    <div class=\"list-row-border-b\">\n      <div>{{ $t(\"Blocks\") }}</div>\n      <div>\n        <span :class=\"[ !delegate.missedblocks && delegate.producedblocks ? 'mr-2' : '' ]\">{{ delegate.producedblocks }}</span>\n        <span v-if=\"!!delegate.missedblocks\" class=\"text-grey mr-2\">({{ delegate.missedblocks }} {{ $t(\"missed\") }})</span>\n        <router-link v-if=\"delegate.producedblocks > 0\" :to=\"{ name: 'wallet-blocks', params: { address: delegate.address, page: 1 } }\">{{ $t(\"See all\") }}</router-link>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\nimport DelegateService from '@/services/delegate'\n\nexport default {\n  props: {\n    wallet: {\n      type: Object,\n      required: true\n    }\n  },\n\n  data: () => ({ delegate: {} }),\n\n  watch: {\n    async wallet(wallet) {\n      if (wallet.publicKey) await this.getDelegate(wallet)\n    }\n  },\n\n  methods: {\n    async getDelegate(wallet) {\n      try {\n        const response = await DelegateService.find(wallet.publicKey)\n        this.delegate = response\n\n        this.$emit('username', response.username)\n      } catch(e) { console.log(e.message || e.data.error) }\n    }\n  }\n}\n</script>\n"]}