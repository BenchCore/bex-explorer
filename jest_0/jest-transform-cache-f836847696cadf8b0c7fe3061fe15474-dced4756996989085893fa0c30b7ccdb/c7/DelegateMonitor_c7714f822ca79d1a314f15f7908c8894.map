{"version":3,"sources":["DelegateMonitor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AA8BA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AAJA;;AAOA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;;AAOA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;AAEA;AACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;;AACA;AACA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AACA;AATA;;AAYA;AACA;AACA;AAlCA;AAnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["<template>\n  <div class=\"max-w-2xl mx-auto md:pt-5\">\n    <content-header>{{ $t(\"Delegate Monitor\") }}</content-header>\n\n    <delegate-detail :delegateCount=\"delegateCount\"></delegate-detail>\n\n    <section class=\"page-section py-8\">\n      <nav class=\"mx-5 sm:mx-10 mb-4 border-b flex items-end\">\n        <div\n          @click=\"activeTab = 'active'\"\n          :class=\"activeTab === 'active' ? 'active-tab' : 'inactive-tab'\">\n          {{ $t(\"Active\") }}\n        </div>\n        <div\n          @click=\"activeTab = 'standby'\"\n          :class=\"activeTab === 'standby' ? 'active-tab' : 'inactive-tab'\">\n          {{ $t(\"Standby\") }}\n        </div>\n      </nav>\n\n      <forging :delegates=\"delegates\" v-show=\"activeTab === 'active'\"></forging>\n\n      <active-delegates v-if=\"activeTab === 'active'\" :delegates=\"delegates\"></active-delegates>\n\n      <standby-delegates v-if=\"activeTab === 'standby'\"></standby-delegates>\n    </section>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\nimport DelegateDetail from '@/components/monitor/Details'\nimport ActiveDelegates from '@/components/monitor/ActiveDelegates'\nimport StandbyDelegates from '@/components/monitor/StandbyDelegates'\nimport Forging from '@/components/monitor/Forging'\nimport DelegateService from '@/services/delegate'\n\nexport default {\n  components: {\n    DelegateDetail,\n    Forging,\n    ActiveDelegates,\n    StandbyDelegates,\n  },\n\n  data: () => ({\n    delegates: [],\n    delegateCount: null,\n    activeTab: 'active',\n    timer: null,\n  }),\n\n  async mounted() {\n    await this.getDelegates()\n    this.initialiseTimer()\n  },\n\n  methods: {\n    async getDelegates() {\n      const response = await DelegateService.activeDelegates()\n      this.delegates = response.delegates\n      this.delegateCount = response.delegateCount\n    },\n\n    initialiseTimer() {\n      this.timer = setInterval(this.getDelegates, 8 * 1000)\n    },\n  },\n\n  beforeDestroy() {\n    clearInterval(this.timer)\n  },\n}\n</script>\n\n<style>\n.meter {\n  width: 50px;\n  height: 50px;\n}\n</style>\n"]}