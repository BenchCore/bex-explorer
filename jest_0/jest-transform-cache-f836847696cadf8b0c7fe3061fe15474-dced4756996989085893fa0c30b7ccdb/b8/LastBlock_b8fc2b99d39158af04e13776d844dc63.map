{"version":3,"sources":["LastBlock.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AA0BA;;;;AACA;;;;AA3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAMA;AAAA;AACA;AACA;AAFA;AAAA;;AAKA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;AAEA;AACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;;AACA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AARA;;AAWA;AACA;AACA;AAxBA","sourcesContent":["<template>\n  <div class=\"flex-auto flex justify-between sm:ml-10\">\n    <div>\n      <div class=\"text-grey mb-2 min-w-0\">{{ $t(\"Last block\") }}</div>\n      <div class=\"text-lg truncate\" v-if=\"block.id\">\n        <link-block :id=\"block.id\">{{ block.id }}</link-block>\n      </div>\n    </div>\n\n    <div class=\"hidden md:block\">\n      <div class=\"text-grey mb-2 min-w-0\">{{ $t(\"Forged\") }}</div>\n      <div class=\"text-lg text-white truncate\">\n        {{ readableCrypto(block.totalForged) }} {{ $tc(\"from transactions\", block.numberOfTransactions, { count: block.numberOfTransactions }) }}\n      </div>\n    </div>\n\n    <div class=\"w-32\">\n      <div class=\"text-grey mb-2 min-w-0\">{{ $t(\"Delegate\") }}</div>\n      <div class=\"text-lg text-white truncate semibold\">\n        <link-wallet :public-key=\"block.generatorPublicKey\"></link-wallet>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\nimport BlockService from '@/services/block'\nimport { mapGetters } from 'vuex'\n\nexport default {\n  data: () => ({\n    block: {},\n    timer: null,\n  }),\n\n  async mounted() {\n    await this.getBlock()\n    this.initialiseTimer()\n  },\n\n  methods: {\n    async getBlock() {\n      const response = await BlockService.last()\n      this.block = response\n    },\n\n    initialiseTimer() {\n      this.timer = setInterval(this.getBlock, 8 * 1000)\n    },\n  },\n\n  beforeDestroy() {\n    clearInterval(this.timer)\n  },\n}\n</script>\n"]}