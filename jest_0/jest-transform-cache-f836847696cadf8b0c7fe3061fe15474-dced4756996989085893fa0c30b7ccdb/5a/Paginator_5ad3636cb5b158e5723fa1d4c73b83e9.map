{"version":3,"sources":["Paginator.vue"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AATA;;AAcA;AAAA;AACA;AADA;AAAA;;AAIA;AACA;AACA;AACA;AAHA;;AAMA;AACA;AACA;;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;;AAEA;AACA;AAXA;AA7BA","sourcesContent":["<template>\n  <div class=\"mx-5 sm:mx-10 mt-5 md:mt-10 flex flex-wrap\">\n    <button\n      @click=\"prev\"\n      :class=\"{ 'hidden' : page <= 1, 'flex' : page > 1 }\"\n      class=\"mr-auto pager-button items-center\">\n      <svg\n       class=\"inline\"\n       xmlns=\"http://www.w3.org/2000/svg\"\n       xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n       width=\"5px\" height=\"8px\">\n      <path fill-rule=\"evenodd\" fill=\"currentColor\"\n       d=\"M4.054,8.000 L5.000,7.067 L1.892,4.000 L5.000,0.933 L4.054,0.000 L-0.000,4.000 L4.054,8.000 Z\"/>\n      </svg>\n      <span class=\"ml-2\">{{ $t(\"Previous\") }}</span>\n    </button>\n\n    <button\n      @click=\"next\"\n      :class=\"{ 'hidden' : page >= totalPages, 'flex' : page < totalPages}\"\n      class=\"ml-auto pager-button items-center float-right\">\n      <span class=\"mr-2\">{{ $t(\"Next\") }}</span>\n      <svg\n       class=\"inline\"\n       xmlns=\"http://www.w3.org/2000/svg\"\n       xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n       width=\"5px\" height=\"8px\">\n      <path fill-rule=\"evenodd\" fill=\"currentColor\"\n       d=\"M0.946,-0.001 L-0.000,0.933 L3.107,4.000 L-0.000,7.066 L0.946,8.000 L4.999,4.000 L0.946,-0.001 Z\"/>\n      </svg>\n    </button>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\nexport default {\n  props: {\n    start: {\n      type: Number,\n      require: true,\n    },\n    perPage: {\n      type: Number,\n      default: 25\n    },\n    count: {\n      type: Number\n    }\n  },\n\n  data: () => ({\n    page: 1,\n  }),\n\n  computed: {\n    totalPages() {\n      return Math.ceil(this.count / this.perPage)\n    }\n  },\n\n  mounted() {\n    this.page = this.start\n  },\n\n  methods: {\n    prev() {\n      if (this.page > 1) this.page--\n\n      this.$parent.$emit('paginatorChanged', this.page)\n    },\n\n    next() {\n      if (!this.count || this.page < this.totalPages) this.page++\n\n      this.$parent.$emit('paginatorChanged', this.page)\n    },\n  },\n}\n</script>\n"]}