{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAcA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AAEA;;;;AAtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAaA;;AAEA;AAAA;AACA;AACA;AAFA;AAAA;;AAKA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAKA;AAIA;;AAtBA;AAAA;;AAAA;AAwBA;;AACA;AACA;AACA;;AAEA;;AAKA;;AAKA;;AAKA;AACA;AACA;AACA;;AA/CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgDA;AAEA;AACA;AACA;;;AAEA;;AAMA;AACA;AACA;AACA;AAEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAEA;;AACA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;;AACA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;;AACA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;;AACA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AA1CA;;AA6CA;AACA;AACA;AAnHA","sourcesContent":["<template>\n  <main :class=\"[\n    nightMode ? 'theme-dark' : 'theme-light',\n    'bg-theme-page-background text-theme-text-content min-h-screen font-sans xl:pt-8'\n  ]\">\n    <app-header></app-header>\n\n    <router-view></router-view>\n\n    <app-footer></app-footer>\n  </main>\n</template>\n\n<script type=\"text/ecmascript-6\">\nimport AppHeader from '@/components/header/Main'\nimport AppFooter from '@/components/Footer'\nimport CoinMarketCapService from '@/services/coin-market-cap'\nimport BlockService from '@/services/block'\nimport DelegateService from '@/services/delegate'\nimport LoaderService from '@/services/loader'\nimport { mapGetters } from 'vuex'\n\nimport '@/styles/style.css'\n\nexport default {\n  components: { AppHeader, AppFooter },\n\n  data: () => ({\n    currencyTimer: null,\n    networkTimer: null\n  }),\n\n  async created() {\n    const network = require(`../networks/${process.env.EXPLORER_CONFIG}`)\n\n    this.$store.dispatch('network/setDefaults', network)\n\n    this.$store.dispatch('network/setServer', network.server)\n    this.$store.dispatch('network/setAlias', network.alias)\n    this.$store.dispatch('network/setActiveDelegates', network.activeDelegates)\n    this.$store.dispatch('network/setRewardOffset', network.rewardOffset)\n    this.$store.dispatch('network/setCurrencies', network.currencies)\n    this.$store.dispatch('network/setKnownWallets', network.knownWallets)\n\n    if (network.defaults.currency) {\n      this.$store.dispatch(\n        'currency/setName',\n        localStorage.getItem('currencyName') || network.defaults.currency.name\n      )\n\n      this.$store.dispatch(\n        'currency/setSymbol',\n        localStorage.getItem('currencySymbol') || network.defaults.currency.symbol\n      )\n    }\n\n    const response = await LoaderService.config()\n    this.$store.dispatch('network/setToken', response.token)\n    this.$store.dispatch('network/setSymbol', response.symbol)\n    this.$store.dispatch('network/setNethash', response.nethash)\n\n    this.$store.dispatch(\n      'ui/setLanguage',\n      localStorage.getItem('language') || 'en'\n    )\n\n    this.$store.dispatch(\n      'ui/setPriceChart',\n      localStorage.getItem('priceChart') || network.config.priceChart\n    )\n\n    this.$store.dispatch(\n      'ui/setNightMode',\n      localStorage.getItem('nightMode') || false\n    )\n\n    this.updateCurrencyRate()\n    this.updateSupply()\n    this.updateHeight()\n    this.updateDelegates()\n  },\n\n  mounted() {\n    this.prepareComponent()\n  },\n\n  computed: {\n    ...mapGetters('currency', { currencyName: 'name' }),\n    ...mapGetters('ui', ['nightMode']),\n    ...mapGetters('network', ['token']),\n  },\n\n  methods: {\n    prepareComponent() {\n      this.initialiseTimers()\n    },\n\n    async updateCurrencyRate() {\n      if (this.currencyName !== this.token) {\n        const rate = await CoinMarketCapService.price(this.currencyName)\n        this.$store.dispatch('currency/setRate', rate)\n      }\n    },\n\n    async updateSupply() {\n      const supply = await BlockService.supply()\n      this.$store.dispatch('network/setSupply', supply)\n    },\n\n    async updateHeight() {\n      const height = await BlockService.height()\n      this.$store.dispatch('network/setHeight', height)\n    },\n\n    async updateDelegates() {\n      const delegates = await DelegateService.all()\n      this.$store.dispatch('delegates/setDelegates', delegates)\n    },\n\n    initialiseTimers() {\n      this.currencyTimer = setInterval(() => {\n        this.updateCurrencyRate()\n      }, 5 * 60 * 1000)\n\n      this.networkTimer = setInterval(() => {\n        this.updateSupply()\n        this.updateHeight()\n        this.updateDelegates()\n      }, 8 * 1000)\n    },\n\n    clearTimers() {\n      clearInterval(this.currencyTimer)\n      clearInterval(this.networkTimer)\n    }\n  },\n\n  beforeDestroy() {\n    this.clearTimers()\n  },\n}\n</script>\n"]}