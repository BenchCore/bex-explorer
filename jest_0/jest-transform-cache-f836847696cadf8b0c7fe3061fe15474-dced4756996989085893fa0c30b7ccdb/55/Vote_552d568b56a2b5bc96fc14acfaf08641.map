{"version":3,"sources":["Vote.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAQA;;;;;;;AAGA;AACA;AACA;AACA;AAFA;AADA;;AAOA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AAHA;;AAMA;AACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;;AACA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAJA;AAhBA;AATA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["<template>\n  <div class=\"list-row\" v-show=\"Object.keys(delegate).length\">\n    <div>{{ $t(\"Votes\") }}</div>\n    <div><link-wallet v-if=\"delegate.address\" :address=\"delegate.address\">{{ delegate.username }}</link-wallet></div>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\nimport WalletService from '@/services/wallet'\n\nexport default {\n  props: {\n    wallet: {\n      type: Object,\n      required: true\n    }\n  },\n\n  data: () => ({ delegate: {} }),\n\n  watch: {\n    wallet(wallet) {\n      if (wallet.address) this.getVotes()\n    }\n  },\n\n  methods: {\n    async getVotes() {\n      const response = await WalletService.vote(this.wallet.address)\n      this.delegate = response\n    }\n  }\n}\n</script>\n"]}